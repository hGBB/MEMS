buildscript {
  ext {
    springBootVersion = '2.1.0.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 11

project.webAppDirName = '../frontend/dist'

repositories {
  mavenCentral()
}


dependencies {
  implementation('org.springframework.boot:spring-boot-starter-actuator')
  implementation('org.springframework.boot:spring-boot-starter-aop')
  implementation('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation('org.springframework.boot:spring-boot-starter-mail')
  implementation('org.springframework.boot:spring-boot-starter-security')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('org.springframework.boot:spring-boot-starter-websocket')
  implementation('org.springframework.security:spring-security-messaging')
  implementation('eu.fraho.spring:security-jwt-base-spring-boot-starter:4.0.0')
  implementation('eu.fraho.spring:security-jwt-internal-spring-boot-starter:4.0.0')
  implementation('org.jetbrains:annotations:16.0.3')
  implementation('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
  implementation('org.apache.commons:commons-lang3')
  implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
  implementation('org.mariadb.jdbc:mariadb-java-client:2.3.0')
  implementation('com.google.guava:guava:27.0.1-jre')
  implementation('org.apache.commons:commons-math3:3.6.1')
  runtimeOnly('org.springframework.boot:spring-boot-devtools')
  runtimeOnly('com.h2database:h2')
  runtimeOnly('mysql:mysql-connector-java')
  runtimeOnly('org.mariadb.jdbc:mariadb-java-client:2.3.0')
  compileOnly('org.projectlombok:lombok')
  annotationProcessor('org.projectlombok:lombok')
  annotationProcessor('org.mapstruct:mapstruct-processor:1.2.0.Final')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.security:spring-security-test')
}

war {
  dependsOn ':frontend:build'
  from '../frontend/dist/'
}
